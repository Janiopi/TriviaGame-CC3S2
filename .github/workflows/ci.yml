name: Python CI

on:
  push:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15
        container_name: trivia_game_db
        ports:
          - 5434:5432
        environment:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        volumes:
          - ./app/db/init.sql:/docker-entrypoint-initdb.d/init.sql
        options: --health-cmd="pg_isready -U trivia_user -d trivia_db" --health-interval=5s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Wait for DB to be healthy
        run: |
          until [ "$(docker inspect -f '{{.State.Health.Status}}' trivia_game_db)" == "healthy" ]; do
            echo "Waiting for database to be healthy..."
            sleep 2
          done

      - name: Run tests with coverage
        run: |
          export PYTHONPATH=$(pwd)/app:$PYTHONPATH
          pytest --cov=app --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: |
            -Dsonar.projectKey=${{ github.repository }}
            -Dsonar.sources=.
            -Dsonar.branch.name=${{ github.ref_name }}
